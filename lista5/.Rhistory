true_y1 <- dados_combinados[i, 1]
true_colunas <- dados_combinados[i, -1]
# Selecionar todas as colunas com todas as linhas exceto a LINHA retirada (LOOCV)
dados_combinados <- dados_combinados[-i,]
resp <- dados_combinados %>% select(y1)
colunas <- dados_combinados %>% select(-y1)
# Executar prcomp para todas as colunas selecionadas
resultado <- prcomp(colunas)
var_explained = resultado$sdev^2 / sum(resultado$sdev^2)
# max. de var explicada pelas CPs
s = sum(cumsum(var_explained) <= j)
n_PC[i, c] = s
covariaveis <- as.matrix(colunas) %*%
as.matrix(resultado$rotation[,c(1:s)])
covariaveis <- data.frame(covariaveis)
newdata = data.frame(cbind(resp, covariaveis))
modelo <- lm(y1 ~ ., data = newdata)
novo_caso <- as.matrix(true_colunas) %*% as.matrix(resultado$rotation[,c(1:s)])
#Fazer a predicao da linha retirada usando o modelo ajustado
predicao[i, c] <- predict(modelo, newdata = data.frame(novo_caso))
predicao_e[i] <- (predict(modelo, newdata = data.frame(novo_caso)) - true_y1)**2
}
RMSEP <- c(RMSEP, sqrt(mean(predicao_e)))
c =c +1
}
Sys.time() - start # 2.769196 mins na BRB SEGUROS
# Processador: Intel(R) Core(TM) i5-10500 CPU @ 3.10GHz 3.10 GHz
# RAM instalada: 8,00 GB (utl: 7,72 GB)
# > RMSEP
#[1] 1.1386270 0.9768882 0.9811538 0.9760095
RMSEP
n_PC
predicao
RMSEP
pcr = pcr(y1~., ncomp = 29, data = dados_combinados, validaton = 'CV')
summary(pcr)
RMSEP(pcr, estimate = 'all', intercept = FALSE)
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
Y <- dados_combinados %>% select(y1)
X <- dados_combinados %>% select(-y1)
Y
X
result = train(x = X, y = Y, method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
LOOCV = trainControl(method = 'LOO')
result = train(x = X, y = Y, method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
as.matrix(Y)
as.matrix(X)
LOOCV = trainControl(method = 'LOO')
result = train(x = as.matrix(X), y = as.matrix(Y), method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
result
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
Y <- dados_combinados %>% select(y1)
X <- dados_combinados %>% select(-y1)
LOOCV = trainControl(method = 'LOO')
result = train(x = as.matrix(X), y = as.matrix(Y), method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
LOOCV = trainControl(method = 'LOO')
result = train(x = X, y = as.matrix(Y), method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
LOOCV = trainControl(method = 'LOO')
result = train(x = X, y = Y, method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
Y <- dados_combinados %>% select(y1)
X <- dados_combinados %>% select(-y1)
LOOCV <- trainControl(method = 'LOO')
result <- train(x = X, y = Y, method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
LOOCV <- trainControl(method = 'LOO')
result <- train(x = X, y = as.vector(Y), method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
result <- train(x = as.matrix(X), y = as.vector(Y), method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
result <- train(x = as.matrix(X), y = as.matrix(Y), method = 'pcr',
preProcess = 'scale', tuneLength = 28,
trControl = LOOCV)
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
dados_combinados
pcr = pcr(y1~., ncomp = 1, data = dados_combinados, validation = 'CV')
summary(pcr)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados, validation = 'CV')
summary(pcr)
n_PC
summray(pcr)
summary(pcr)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados, validation = 'CV', intercept = F)
summary(pcr)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados, validation = 'CV')
summary(pcr)
summary(pcr)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados, validation = 'CV', subset = 119)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados, validation = "LOO")
summary(pcr)
c(1:2)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados, validation = "LOO",
cvsegments(120, length.seg = 1, type = "cons"))
summary(pcr)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados, validation = "LOO",
cvsegments(120, 120, type = "consecutive"))
pcr = pcr(y1~., ncomp = 29, data = dados_combinados, validation = "LOO",
cvsegments(N=120, k=120, length.seg = 1,type = "consecutive"))
pcr = pcr(y1~., ncomp = 29, data = dados_combinados,
cvsegments(N=120, k=120, length.seg = 1, type = "consecutive"))
pcr = pcr(y1~., ncomp = 29, data = dados_combinados,validation = "LOO",
cvsegments(N=120, k=120, length.seg = 1, type = "consecutive"))
pcr = pcr(y1~., ncomp = 29, data = dados_combinados,validation = "LOO",
cvsegments(N=120, k=120, length.seg = 1, type = "consecutive", data= dados_combinados))
pcr = pcr(y1~., ncomp = 29, data = dados_combinados,validation = "LOO",
cvsegments(N=120, k=120, length.seg = 1, type = "consecutive"))
pcr = pcr(y1~., ncomp = 29, data = dados_combinados,validation = "LOO",
type = "consecutive")
summary(pcr)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados)
crossval(
pcr,
segments = 120,
segment.type = 'consecutive',
length.seg = 1,
)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados)
crossval(
pcr,
segments = 120,
segment.type = 'consecutive',
length.seg = 1)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
RMSEP(result)
summary(result)
n_PC
summary(result)
pcr = pcr(y1~., ncomp = 30, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
summary(result)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
summary(result)
summary(pcr)
result$validation
summary(result)
pcr = pcr(y1~., ncomp = 8, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
summary(result)
start <- Sys.time()
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
pcr = pcr(y1~., ncomp = 8, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
summary(result)
Sys.time() - start
start <- Sys.time()
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
summary(result)
Sys.time() - start
start <- Sys.time()
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'random',
length.seg = 1)
summary(result)
Sys.time() - start
result$validation
predicao
predicao[,3]
predicao[,2]
start <- Sys.time()
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
summary(result)
Sys.time() - start
result$validation
RMSEP(result)
sqrt(2.45)
(2.45)**(1/2)
RMSEP(result, estimate = 'all')
result$fitted.values
result$validation
RMSEP(result$validation)
result$validation
result$validation$pred
RMSEP(result$validation$pred)
result$validation$pred[,8]
result$validation$pred[1]
result$validation$pred[,1]
result$validation$pred[2]
result$validation$pred[,]
result$validation$pred[,,8]
RMSEP <- c()
for (i in c(4, 8, 17, 29)){
RMSEP <- c(RMSEP, sqrt(mean((result$validation$pred[,,i] - Y)**2)))
}
RMSEP
###############
### PARTE 2 ###
###############
#install.packages('caret')
library(caret)
#install.packages('pls')
library(pls)
start <- Sys.time()
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
Y <- dados_combinados %>% select(y1)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
Sys.time() - start
# 10.67219 secs na BBR SEGUROS
RMSEP <- c()
for (i in c(4, 8, 17, 29)){
RMSEP <- c(RMSEP, sqrt(mean((result$validation$pred[,,i] - Y)**2)))
}
RMSEP
Y
as.matrix(result$validation$pred[,,i])
RMSEP <- c()
for (i in c(4, 8, 17, 29)){
RMSEP <- c(RMSEP, sqrt(mean((as.matrix(result$validation$pred[,,i]) - as.matrix(Y))**2)))
}
RMSEP
n_PC
mean(n_PC[,1])
mean(n_PC[,2])
mean(n_PC[,3])
mean(n_PC[,4])
--
###############
### PARTE 2 ###
###############
#install.packages('caret')
library(caret)
start <- Sys.time()
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
Y <- dados_combinados %>% select(y1)
plsr = plsr(y1~., data = dados_combinados, ncomp = 29)
result = crossval(plsr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
Sys.time() - start
# 10.67219 secs na BBR SEGUROS
RMSEP_2 <- c()
for (i in c(4, 8, 17, 29)){
RMSEP_2 <- c(RMSEP_2, sqrt(mean((as.matrix(result$validation$pred[,,i]) - as.matrix(Y))**2)))
}
start <- Sys.time()
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
Y <- dados_combinados %>% select(y1)
plsr = plsr(y1~., data = dados_combinados, ncomp = 29)
result = crossval(plsr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
Sys.time() - start
# 10.67219 secs na BBR SEGUROS
RMSEP_3 <- c()
for (i in c(4, 8, 17, 29)){
RMSEP_2 <- c(RMSEP_2, sqrt(mean((as.matrix(result$validation$pred[,,i]) - as.matrix(Y))**2)))
}
RMSEP_3
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
Y <- dados_combinados %>% select(y1)
pcr = pcr(y1~., ncomp = 29, data = dados_combinados)
result = crossval(pcr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
Sys.time() - start
# 10.67219 secs na BBR SEGUROS
RMSEP_2 <- c()
for (i in c(4, 8, 17, 29)){
RMSEP_2 <- c(RMSEP_2, sqrt(mean((as.matrix(result$validation$pred[,,i]) - as.matrix(Y))**2)))
}
# RMSEP_1 E RMSEP_2 NÃO BATEM NA VIRGULA, POIS PARA O RMSE_1 O NÚMERO DE CPs QUE ENTRAM COMO
# VAR. EXP. NO MODELO LINEAR VARIA PARA CADA ITERAÇÃO DENTRO DO LOOCV, JÁ NO RMSE_2 O NÚMERO
# DE CPs QUE ENTRAM É FIXO.
###############
### PARTE 3 ###
###############
#install.packages('caret')
library(caret)
#install.packages('pls')
library(pls)
start <- Sys.time()
caminho_base <- "C:/Users/u00378/Desktop/topicos_george_2023/lista5/BaseDados.xlsx"
## Obter os nomes das abas
abas <- excel_sheets(caminho_base)
## Ler as abas e armazenar em uma lista
dados_abas <- map(abas, ~read_excel(caminho_base, sheet = .x))
## Realizar o join com base no índice (primeira coluna)
dados_combinados <- reduce(dados_abas, left_join, by = '...1')
## data wrangling
dados_combinados <- data.frame(dados_combinados, row.names = dados_combinados$...1)
dados_combinados <- dados_combinados[, -1]
linhas_especificas <- row.names(filter(dados_combinados, abs(y1)>10))
# Substitua os valores por NA nas linhas especificadas
dados_combinados[linhas_especificas, ] <- replace(dados_combinados[linhas_especificas, ],
TRUE, NA)
# Substituir NA pelo valor observado no mês anterior
dados_combinados <- na.locf(dados_combinados, na.rm = FALSE)
Y <- dados_combinados %>% select(y1)
plsr = plsr(y1~., data = dados_combinados, ncomp = 29)
result = crossval(plsr, segments = 120, segment.type = 'consecutive',
length.seg = 1)
Sys.time() - start
# 9.588054 secs na BBR SEGUROS
RMSEP_3 <- c()
for (i in c(4, 8, 17, 29)){
RMSEP_3 <- c(RMSEP_3, sqrt(mean((as.matrix(result$validation$pred[,,i]) - as.matrix(Y))**2)))
}
RMSEP_3
RMSEP_2
RMSEP_3
RMSEP_1
result$validation$pred[,,17]
as.matrix(result$validation$pred[,,17])
RMSEP_3
120-24
