"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor) # ou screeplot(cprecor,type=c("lines"))
axis(side = 1,labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor) # ou screeplot(cprecor,type=c("lines"))
axis(side=1,at=c(1:7)labels=c("Score",
plot(cprecor) # ou screeplot(cprecor,type=c("lines"))
axis(side=1,at=c(1:7), labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, xaxt = 'n') # ou screeplot(cprecor,type=c("lines"))
axis(side=1,at=c(1:7), labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, xaxt = 'n') # ou screeplot(cprecor,type=c("lines"))
axis(side=1,at=c(1:7), labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, xaxt = 'n') # ou screeplot(cprecor,type=c("lines"))
axis(side=1,xaxp=c(1:7), labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, xaxt = 'n') # ou screeplot(cprecor,type=c("lines"))
axis(side=1,at=c(1:7), labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, xaxt = 'n')
summary(cprecor)
ggplot_pca(cprecor, labels = recor$Pais) +
labs(title = "PCA Recordes Femininos")
ggplot_pca(cprecor, labels = df$`Country name`) +
labs(title = "PCA Recordes Femininos")
View(df)
colnames(df)
setwd("C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista3")
library(readxl)
df = read_xlsx('sample_whr.xlsx')
nomes <- c("Country_name", "Score", "LogGDP_per_capita",
"Social_support", "Healthy_life_exp",
"Freedom_choices", "Generosity", "Percep_corruption")
setnames(stock,nomes)
setwd("C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista3")
library(readxl)
df = read_xlsx('sample_whr.xlsx')
nomes <- c("Country_name", "Score", "LogGDP_per_capita",
"Social_support", "Healthy_life_exp",
"Freedom_choices", "Generosity", "Percep_corruption")
setnames(df,nomes)
setwd("C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista3")
library(readxl)
df = read_xlsx('sample_whr.xlsx')
nomes <- c("Country_name", "Score", "LogGDP_per_capita",
"Social_support", "Healthy_life_exp",
"Freedom_choices", "Generosity", "Percep_corruption",
"Dystopia")
setnames(df,nomes)
var(df[,2:7])
cor(df[,2:7])
cprecor <- prcomp(~ Score + LogGDP_per_capita +
Social_support + Healthy_life_exp
+ Freedom_choices
+ Generosity + Percep_corruption,
data=df, scale = T)
attributes(cprecor)
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, xaxt = 'n')
summary(cprecor)
cprecor
ggplot_pca(cprecor, labels = df$`Country name`) +
labs(title = "PCA Recordes Femininos")
setwd("C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista3")
library(readxl)
df = read_xlsx('sample_whr.xlsx')
nomes <- c("Country_name", "Score", "LogGDP_per_capita",
"Social_support", "Healthy_life_exp",
"Freedom_choices", "Generosity", "Percep_corruption",
"Dystopia")
setnames(df,nomes)
var(df[,2:7])
cor(df[,2:7])
cprecor <- prcomp(~ Score + LogGDP_per_capita +
Social_support + Healthy_life_exp
+ Freedom_choices
+ Generosity + Percep_corruption,
data=df, scale = T)
attributes(cprecor)
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, xaxt = 'n')
summary(cprecor)
cprecor
ggplot_pca(cprecor, labels = df$Country_name) +
labs(title = "PCA Recordes Femininos")
setwd("C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista3")
library(readxl)
df = read_xlsx('sample_whr.xlsx')
nomes <- c("Country_name", "Score", "LogGDP_per_capita",
"Social_support", "Healthy_life_exp",
"Freedom_choices", "Generosity", "Percep_corruption",
"Dystopia")
setnames(df,nomes)
var(df[,2:7])
cor(df[,2:7])
cprecor <- prcomp(~ Score + LogGDP_per_capita +
Social_support + Healthy_life_exp
+ Freedom_choices
+ Generosity + Percep_corruption,
data=df, scale = T)
attributes(cprecor)
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, xaxt = 'n')
summary(cprecor)
cprecor
ggplot_pca(cprecor, labels = df$Country_name) +
labs(title = "PCA World Happiness Report")
setwd("C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista3")
library(readxl)
df = read_xlsx('sample_whr.xlsx')
nomes <- c("Score", "LogGDP_per_capita",
"Social_support", "Healthy_life_exp",
"Freedom_choices", "Generosity",
"Percep_corruption", "Country_name")
setnames(df,nomes)
var(df[,2:7])
cor(df[,2:7])
cprecor <- prcomp(~ Score + LogGDP_per_capita +
Social_support + Healthy_life_exp
+ Freedom_choices
+ Generosity + Percep_corruption,
data=df, scale = T)
attributes(cprecor)
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, xaxt = 'n')
summary(cprecor)
cprecor
ggplot_pca(cprecor, labels = df$Country_name) +
labs(title = "PCA World Happiness Report")
plot(cprecor)
plot(cprecor, main='Scree plot')
summary(cprecor)
summary(cprecor)
cprecor
cprecor$sdev
cprecor
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, main='Scree plot')
var(df$Score)
var(df$LogGDP_per_capita)
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
var(df[,2:7])
summary(cprecor)
plot(cprecor, main='Scree plot')
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, main='Scree plot')
plot(cprecor, main='Scree plot', xlab = 'CPs')
axis(side=1, at=c(1:7),labels=c(1:7))
axis(side=1, at=c(1:7))
plot(cprecor, main='Scree plot', xlab = 'CPs')
axis(side=1, at=c(1:7))
plot(cprecor, main='Scree plot', xlab = 'CPs')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, main='Scree plot', xlab = 'CPs', xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
plot(cprecor, main='Scree plot', xlab = 'CPs', xaxt = c(1:7))
plot(cprecor, main='Scree plot', xlab = 'CPs', labels = c(1:7))
plot(cprecor, main='Scree plot', xlab = 'CPs', xlabels = c(1:7))
plot(cprecor, main='Scree plot', xlab = 'CPs', xlim = c(1:7))
plot(cprecor, main='Scree plot', xlab = 'CPs')
plot(cprecor, main='Scree plot', xlab = 'CPs 1 to 7')
summary(cprecor)
eigen(df$Score)
cprecor$sdev
plot(cprecor, main='Scree plot', xlab = 'Dimensions')
screeplot(cprecor,type=c("lines"))
screeplot(cprecor,type=c("lines"), main='Scree plot',
xlab = 'Dimensions')
screeplot(cprecor,type=c("lines"), main='Scree plot')
var_explained = cprecor$sdev^2 / sum(cprecor$sdev^2)
#create scree plot
library(ggplot2)
qplot(c(1:4), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
var_explained
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
#create scree plot
library(ggplot2)
qplot(c(1:4), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
qplot(c(1:4), x =var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
qplot(c(1:7), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
var_explained
0.53054326 +0.19511704
attributes(cprecor)
#calculate total variance explained by each principal component
var_explained = cprecor$sdev^2 / sum(cprecor$sdev^2)
#create scree plot
library(ggplot2)
qplot(c(1:7), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
setwd(
"C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista3"
)
library(readxl)
library(ggplot2)
df = read_xlsx('sample_whr.xlsx')
nomes <- c("Score", "LogGDP_per_capita",
"Social_support", "Healthy_life_exp",
"Freedom_choices", "Generosity",
"Percep_corruption", "Country_name")
setnames(df,nomes)
var(df[,2:7])
cor(df[,2:7])
cprecor <- prcomp(~ Score + LogGDP_per_capita +
Social_support + Healthy_life_exp
+ Freedom_choices
+ Generosity + Percep_corruption,
data=df, scale = T)
var_explained = cprecor$sdev^2 / sum(cprecor$sdev^2)
qplot(c(1:7), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c("Score",
"GDP",
"Social support",
"Healthy life exp.",
"Freedom",
"Generosity",
"corruption"))
summary(cprecor)
cprecor
ggplot_pca(cprecor, labels = df$Country_name) +
labs(title = "PCA World Happiness Report")
var_explained = cprecor$sdev^2 / sum(cprecor$sdev^2)
qplot(c(1:7), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
var_explained
teste = df[20:,]
teste = df[20:,:]
teste = df[20:, :]
df[20:,
df[20:, :]
df[20:, 1:7]
df[c(20:), c(1:)]
cprecor$rotation
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c(1:7))
setwd(
"C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista3"
)
library(readxl)
library(ggplot2)
df = read_xlsx('sample_whr.xlsx')
nomes <- c("Score", "LogGDP_per_capita",
"Social_support", "Healthy_life_exp",
"Freedom_choices", "Generosity",
"Percep_corruption", "Country_name")
setnames(df,nomes)
var(df[,2:7])
cor(df[,2:7])
cprecor <- prcomp(~ Score + LogGDP_per_capita +
Social_support + Healthy_life_exp
+ Freedom_choices
+ Generosity + Percep_corruption,
data=df, scale = T)
var_explained = cprecor$sdev^2 / sum(cprecor$sdev^2)
qplot(c(1:7), var_explained) +
geom_line() +
xlab("Principal Component") +
ylab("Variance Explained") +
ggtitle("Scree Plot") +
ylim(0, 1)
var_explained
plot(cumsum(cprecor$sdev**2)/sum(cprecor$sdev**2),
type="b", ylim = c(0.5,1),
xlab="CPs", ylab="% da Variancia",xaxt = 'n')
axis(side=1, at=c(1:7),labels=c(1:7))
0.53054326 +0.19511704
0.53054326 +0.19511704+ 0.11601232
ggplot_pca(cprecor, labels = df$Country_name) +
labs(title = "PCA World Happiness Report")
# Topicos em Aprendizado Estatístico
# Decomposicao em valores singulares
# Exemplo - Redução de Dimensionalidade
library(psych)
library(OpenImageR)
library(Matrix)
foto ="C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista2/imag1.jpg"
#foto ="C:/Users/Igor/Desktop/topicos_george_2023/git_repo/lista2/imag2.jpg"
img <- readImage(foto)
dim(img)
imageShow(img)
img_gray <- rgb_2gray(img) # ERROR!!!
img3 <- img[,,1:3]
imageShow(img3)
dim(img3)
img_gray <- rgb_2gray(img3)
dim(img_gray)
imageShow(img_gray)
### Aplicando SVD na Imagem
imgg.svd <- svd(img_gray)
imgg.svd$d
D <- diag(imgg.svd$d)
dim(D)
U <- imgg.svd$u
V <- imgg.svd$v
plot(1:length(imgg.svd$d), imgg.svd$d)
abline(v=c(5,10,20,40))
plot(1:length(imgg.svd$d), imgg.svd$d,
xlim = c(1,60))
abline(v=c(5,10,20,40))
plot(1:length(imgg.svd$d), imgg.svd$d,
xlim = c(10,80),ylim = c(0,30))
abline(v=c(20,40,60))
### Aproximacoes
U5 <- as.matrix(U[,1:5])
V5 <- as.matrix(V[,1:5])
D5 <- diag(imgg.svd$d[1:5])
img_gray5 <- U5 %*% D5 %*% t(V5)
imageShow(img_gray5)
((tr(D5)/tr(D))-1) * 100
rankMatrix(img_gray5)[1]
mean((img_gray-img_gray5)^2)
U10 <- as.matrix(U[,1:10])
V10 <- as.matrix(V[,1:10])
D10 <- diag(imgg.svd$d[1:10])
img_gray10 <- U10 %*% D10 %*% t(V10)
imageShow(img_gray10)
((tr(D10)/tr(D))-1) * 100
rankMatrix(img_gray10)[1]
mean((img_gray-img_gray10)^2)
U20 <- as.matrix(U[,1:20])
V20 <- as.matrix(V[,1:20])
D20 <- diag(imgg.svd$d[1:20])
img_gray20 <- U20 %*% D20 %*% t(V20)
imageShow(img_gray20)
((tr(D20)/tr(D))-1) * 100
rankMatrix(img_gray20)[1]
mean((img_gray-img_gray20)^2)
((tr(D20)/tr(D))-1) * 100
((tr(D10)/tr(D))-1) * 100
U30 <- as.matrix(U[,1:30])
V30 <- as.matrix(V[,1:30])
D30 <- diag(imgg.svd$d[1:30])
img_gray30 <- U30 %*% D30 %*% t(V30)
imageShow(img_gray30)
((tr(D30)/tr(D))-1) * 100
img_gray30
